{"version":3,"sources":["components/Phonebook/ContactsList/ContantItem/styles.jsx","components/Phonebook/ContactsList/ContantItem/index.jsx","components/Phonebook/ContactsList/index.jsx","components/Phonebook/ContactForm/styles.jsx","components/Phonebook/ContactForm/index.jsx","components/Phonebook/Filter/styles.jsx","components/Phonebook/Filter/index.jsx","components/Phonebook/index.jsx","components/Container/index.jsx","components/Layouts/index.jsx","App.js","index.js"],"names":["useStyles","createUseStyles","ContactItem","display","flexDirection","justifyContent","marginBottom","ContactName","minWidth","ContactNumber","width","ContactButton","border","borderRadius","backgroundColor","color","ContanctItem","id","name","number","onDeleteContact","classes","className","onClick","ContactsList","padding","contacts","length","map","Phonebook","borderColor","outline","PhonebookInput","fontSize","initialState","ContactForm","onSubmit","useState","inputValue","setInputValue","changeInput","e","currentTarget","value","preventDefault","Object","values","some","item","reset","type","pattern","title","required","placeholder","onChange","Filter","paddingLeft","defaultProps","initialContacts","setContacts","filter","setFilter","useEffect","data","JSON","parse","localStorage","getItem","setItem","stringify","normalizedFilter","toLowerCase","filteredContacts","includes","find","contact","alert","newContact","shortid","generate","prevState","contactId","Container","maxWidth","margin","marginTop","fontWeight","backgroundImage","WebkitBackgroundClip","WebkitTextFillColor","children","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MA8BeA,EA5BGC,YAAgB,CAChCC,YAAa,CACXC,QAAS,OACTC,cAAe,MACfC,eAAgB,gBAChB,qBAAsB,CACpBC,aAAc,SAGlBC,YAAa,CACXC,SAAU,SAEZC,cAAe,CACbC,MAAO,SAETC,cAAe,CACbC,OAAQ,oCACRC,aAAc,oBACdC,gBAAiB,SACjBC,MAAO,QACP,mBAAoB,CAClB,eAAgB,CACdD,gBAAiB,SAEnBA,gBAAiB,Y,OCJRE,EApBM,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,gBAClCC,EAAUrB,IAChB,OACE,qBAAIsB,UAAWD,EAAQnB,YAAvB,UACE,mBAAGoB,UAAWD,EAAQd,YAAtB,SAAoCW,IACpC,mBAAGI,UAAWD,EAAQZ,cAAtB,SAAsCU,IACtC,wBACEG,UAAWD,EAAQV,cACnBY,QAAS,kBAAMH,EAAgBH,IAFjC,wBCLAjB,EAAYC,YAAgB,CAChCuB,aAAc,CACZC,QAAS,OACTf,MAAO,QACPE,OAAQ,kBACRN,aAAc,UAiCHkB,EA7BM,SAAC,GAAmC,IAAjCE,EAAgC,EAAhCA,SAAUN,EAAsB,EAAtBA,gBAC1BC,EAAUrB,IAChB,OACE,oBAAIsB,UAAWD,EAAQG,aAAvB,SACuB,IAApBE,EAASC,OACRD,EAASE,KAAI,gBAAGX,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACX,cAAC,EAAD,CAEEF,GAAIA,EACJC,KAAMA,EACNC,OAAQA,EACRC,gBAAiBA,GAJZH,MAQT,mE,eCcOjB,EAxCGC,YAAgB,CAChC4B,UAAW,CACTnB,MAAO,QACPE,OAAQ,kBACRa,QAAS,YACT,WAAY,CACVb,OAAQ,mCACRC,aAAc,oBACdC,gBAAiB,QACjBW,QAAS,WACT,mBAAoB,CAClBX,gBAAiB,SACjBgB,YAAa,SACbf,MAAO,QACPgB,QAAS,WAIfC,eAAgB,CACd7B,QAAS,OACTO,MAAO,QACPN,cAAe,SACfE,aAAc,OACd,SAAU,CACRA,aAAc,OACd2B,SAAU,QAEZ,UAAW,CACTzB,SAAU,QACVI,OAAQ,OACRC,aAAc,OACdY,QAAS,WACTQ,SAAU,OACV,mBAAoB,CAClBF,QAAS,YChCXG,EAAe,CACnBhB,KAAM,GACNC,OAAQ,IAyDKgB,EAvDK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACff,EAAUrB,IADoB,EAEAqC,mBAASH,GAFT,mBAE7BI,EAF6B,KAEjBC,EAFiB,KAG5BrB,EAAiBoB,EAAjBpB,KAAMC,EAAWmB,EAAXnB,OAaRqB,EAAc,SAAAC,GAAM,IAAD,EACCA,EAAEC,cAAlBxB,EADe,EACfA,KAAMyB,EADS,EACTA,MACdJ,EAAc,2BAAKD,GAAN,kBAAmBpB,EAAOyB,MAEzC,OACE,uBAAMP,SAhBa,SAAAK,GACnBA,EAAEG,iBACoBC,OAAOC,OAAOR,GAAYS,MAAK,SAAAC,GAAI,OAAKA,OAI9DZ,EAASlB,EAAMC,GACfoB,EAAcL,GACdO,EAAEC,cAAcO,UAQc3B,UAAWD,EAAQQ,UAAjD,UACE,wBAAOP,UAAWD,EAAQW,eAA1B,UACE,wCACA,uBACEkB,KAAK,OACLhC,KAAK,OACLiC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,YAAY,kBACZC,SAAUf,OAGd,wBAAOlB,UAAWD,EAAQW,eAA1B,UACE,yCACA,uBACEkB,KAAK,MACLhC,KAAK,SACLiC,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRC,YAAY,0BACZC,SAAUf,OAGd,wBAAQU,KAAK,SAAb,6BC/BSlD,EApBGC,YAAgB,CAChCuD,OAAQ,CACNrD,QAAS,OACTE,eAAgB,gBAChBD,cAAe,MACfE,aAAc,OACd2B,SAAU,OACVvB,MAAO,QACP,UAAW,CACTF,SAAU,QACVI,OAAQ,OACRC,aAAc,OACd4C,YAAa,OACbxB,SAAU,OACV,mBAAoB,CAClBF,QAAS,YCfXyB,EAAS,SAAC,GAAyB,IAAvBb,EAAsB,EAAtBA,MAAOY,EAAe,EAAfA,SACjBlC,EAAUrB,IAChB,OACE,wBAAOsB,UAAWD,EAAQmC,OAA1B,UACE,yDACA,uBAAON,KAAK,OAAOP,MAAOA,EAAOY,SAAUA,QAIjDC,EAAOE,aAAe,CACpBf,MAAO,IAMMa,QCXTG,EAAkB,CACtB,CAAE1C,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,gBAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,gBAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,gBAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,gBAsDjCU,EAnDG,WAAO,IAAD,EACUQ,mBAASsB,GADnB,mBACfjC,EADe,KACLkC,EADK,OAEMvB,mBAAS,IAFf,mBAEfwB,EAFe,KAEPC,EAFO,KAiBtBC,qBAAU,WACR,IAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,aAC7CR,EAAYI,KACX,IAEHD,qBAAU,WACRI,aAAaE,QAAQ,WAAYJ,KAAKK,UAAU5C,MAC/C,CAACA,IAEJ,IAOM6C,EAAmBV,EAAOW,cAE1BC,EAAmB/C,EAASmC,QAAO,qBAAG3C,KACrCsD,cAAcE,SAASH,MAE9B,OACE,qCACE,2CACA,cAAC,EAAD,CAAanC,SArCQ,SAAClB,EAAMC,GAC9B,GAAIO,EAASiD,MAAK,SAAAC,GAAO,OAAIA,EAAQ1D,OAASA,KAC5C2D,MAAM,GAAD,OAAI3D,EAAJ,gCADP,CAIA,IAAM4D,EAAa,CACjB7D,GAAI8D,IAAQC,WACZ9D,OACAC,UAEFyC,GAAY,SAAAqB,GAAS,OAAKH,GAAL,mBAAoBG,WA4BvC,0CACA,cAAC,EAAD,CAAQtC,MAAOkB,EAAQN,SAbN,SAAAd,GACnBqB,EAAUrB,EAAEC,cAAcC,UAaxB,cAAC,EAAD,CACEjB,SAAU+C,EACVrD,gBApBsB,SAAA8D,GAC1BtB,GAAY,SAAAqB,GAAS,OAAIA,EAAUpB,QAAO,qBAAG5C,KAAgBiE,eCtC3DlF,EAAYC,YAAgB,CAChCkF,UAAW,CACTC,SAAU,SACVC,OAAQ,SACR5D,QAAS,SACT,OAAQ,CACNtB,QAAS,eACTmF,UAAW,OACXhF,aAAc,OACd2B,SAAU,OACVsD,WAAY,OACZC,gBACE,4EACFC,qBAAsB,OACtBC,oBAAqB,kBAaZP,EARG,SAAC,GAAkB,IAAhBQ,EAAe,EAAfA,SACbtE,EAAUrB,IAChB,OAAO,qBAAKsB,UAAWD,EAAQ8D,UAAxB,SAAoCQ,KCf9BC,EANA,SAAC,GAAD,IAAGD,EAAH,EAAGA,SAAH,OAAkB,cAAC,EAAD,UAAYA,KCS9BE,MARf,WACE,OACE,cAAC,EAAD,UACE,cAAC,EAAD,O,YCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6cb98449.chunk.js","sourcesContent":["import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  ContactItem: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    '&:not(:last-child)': {\r\n      marginBottom: '10px',\r\n    },\r\n  },\r\n  ContactName: {\r\n    minWidth: '150px',\r\n  },\r\n  ContactNumber: {\r\n    width: '125px',\r\n  },\r\n  ContactButton: {\r\n    border: ' 2px solid rgba(255,255,255,0.27)',\r\n    borderRadius: '0px 10px 0px 10px',\r\n    backgroundColor: 'purple',\r\n    color: 'white',\r\n    '&:hover, &:focus': {\r\n      '.ContactItem': {\r\n        backgroundColor: 'black',\r\n      },\r\n      backgroundColor: 'black',\r\n    },\r\n  },\r\n});\r\nexport default useStyles;\r\n","import PropTypes from 'prop-types';\r\nimport useStyles from './styles';\r\nconst ContanctItem = ({ id, name, number, onDeleteContact }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <li className={classes.ContactItem}>\r\n      <p className={classes.ContactName}>{name}</p>\r\n      <p className={classes.ContactNumber}>{number}</p>\r\n      <button\r\n        className={classes.ContactButton}\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nContanctItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContanctItem;\r\n","import { createUseStyles } from 'react-jss';\r\nimport PropTypes from 'prop-types';\r\nimport ContactItem from './ContantItem';\r\nconst useStyles = createUseStyles({\r\n  ContactsList: {\r\n    padding: '20px',\r\n    width: '450px',\r\n    border: '2px solid black',\r\n    marginBottom: '20px',\r\n  },\r\n});\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ul className={classes.ContactsList}>\r\n      {contacts.length !== 0 ? (\r\n        contacts.map(({ id, name, number }) => (\r\n          <ContactItem\r\n            key={id}\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        ))\r\n      ) : (\r\n        <p>This contact is not in the list</p>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import { createUseStyles } from 'react-jss';\r\nconst useStyles = createUseStyles({\r\n  Phonebook: {\r\n    width: '450px',\r\n    border: '2px solid black',\r\n    padding: '10px 10px',\r\n    '& button': {\r\n      border: ' 2px solid rgba(136,31,136,0.87)',\r\n      borderRadius: '20px 0px 20px 0px',\r\n      backgroundColor: 'white',\r\n      padding: '5px 30px',\r\n      '&:hover, &:focus': {\r\n        backgroundColor: 'indigo',\r\n        borderColor: 'indigo',\r\n        color: 'white',\r\n        outline: 'none ',\r\n      },\r\n    },\r\n  },\r\n  PhonebookInput: {\r\n    display: 'flex',\r\n    width: '215px',\r\n    flexDirection: 'column',\r\n    marginBottom: '20px',\r\n    '& span': {\r\n      marginBottom: '10px',\r\n      fontSize: '20px',\r\n    },\r\n    '& input': {\r\n      minWidth: '225px',\r\n      border: 'none',\r\n      borderRadius: '10px',\r\n      padding: '5px 15px',\r\n      fontSize: '15px',\r\n      '&:hover, &:focus': {\r\n        outline: 'none',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default useStyles;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useStyles from './styles';\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const classes = useStyles();\r\n  const [inputValue, setInputValue] = useState(initialState);\r\n  const { name, number } = inputValue;\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const hasEmptyField = Object.values(inputValue).some(item => !item);\r\n    if (hasEmptyField) {\r\n      return;\r\n    }\r\n    onSubmit(name, number);\r\n    setInputValue(initialState);\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  const changeInput = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setInputValue({ ...inputValue, [name]: value });\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} className={classes.Phonebook}>\r\n      <label className={classes.PhonebookInput}>\r\n        <span>Name</span>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          placeholder=\"Enter your name\"\r\n          onChange={changeInput}\r\n        />\r\n      </label>\r\n      <label className={classes.PhonebookInput}>\r\n        <span>Phone</span>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          required\r\n          placeholder=\"Enter your phone number\"\r\n          onChange={changeInput}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add Contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  Filter: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexDirection: 'row',\r\n    marginBottom: '20px',\r\n    fontSize: '20px',\r\n    width: '450px',\r\n    '& input': {\r\n      minWidth: '225px',\r\n      border: 'none',\r\n      borderRadius: '10px',\r\n      paddingLeft: '15px',\r\n      fontSize: '15px',\r\n      '&:hover, &:focus': {\r\n        outline: 'none',\r\n      },\r\n    },\r\n  },\r\n});\r\nexport default useStyles;\r\n","import PropTypes from 'prop-types';\r\nimport useStyles from './styles';\r\nconst Filter = ({ value, onChange }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <label className={classes.Filter}>\r\n      <span> Find contact by name</span>\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\nFilter.defaultProps = {\r\n  value: '',\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import { useState, useEffect } from 'react';\nimport shortid from 'shortid';\n\nimport ContactsList from './ContactsList';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56699' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12699' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79151' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-2612' },\n];\n\nconst Phonebook = () => {\n  const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState('');\n\n  const handleAddContact = (name, number) => {\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    setContacts(prevState => [newContact, ...prevState]);\n  };\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('contacts'));\n    setContacts(data);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleDeleteContact = contactId => {\n    setContacts(prevState => prevState.filter(({ id }) => id !== contactId));\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n  const normalizedFilter = filter.toLowerCase();\n\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <ContactForm onSubmit={handleAddContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactsList\n        contacts={filteredContacts}\n        onDeleteContact={handleDeleteContact}\n      />\n    </>\n  );\n};\nexport default Phonebook;\n","import PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  Container: {\n    maxWidth: '1200px',\n    margin: '0 auto',\n    padding: '0 15px',\n    '& h2': {\n      display: 'inline-block',\n      marginTop: '20px',\n      marginBottom: '20px',\n      fontSize: '35px',\n      fontWeight: 'bold',\n      backgroundImage:\n        'linear-gradient(to left, violet, indigo, blue, green, black, orange, red)',\n      WebkitBackgroundClip: 'text',\n      WebkitTextFillColor: 'transparent',\n    },\n  },\n});\n\nconst Container = ({ children }) => {\n  const classes = useStyles();\n  return <div className={classes.Container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Container;\n","import PropTypes from 'prop-types';\nimport Container from '../Container';\n\nconst Layout = ({ children }) => <Container>{children}</Container>;\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","// Компоненты\nimport Phonebook from './components/Phonebook';\nimport Layout from './components/Layouts';\n\nfunction App() {\n  return (\n    <Layout>\n      <Phonebook />\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}